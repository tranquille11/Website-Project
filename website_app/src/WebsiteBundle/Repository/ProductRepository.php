<?php

namespace WebsiteBundle\Repository;

use Doctrine\DBAL\DBALException;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends \Doctrine\ORM\EntityRepository
{

    public function getProducts($sku, $path)
    {
        $conn = $this->getEntityManager()->getConnection();

        $sql = "SELECT * FROM `product`
                LEFT JOIN `photo` on product.id = photo.product_id
                WHERE SKU LIKE ?
                AND path LIKE ? ORDER BY name";
        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
            echo $e->getMessage();
        }

        $stmt->bindValue(1, $sku.'%');
        $stmt->bindValue(2, '%'.$path);
        $stmt->execute();

        return $stmt->fetchAll();
    }

    public function getAllProducts()
    {
        $conn = $this->getEntityManager()->getConnection();

        $sql = "SELECT * FROM `product`
                LEFT JOIN `photo` on product.id = photo.product_id
                WHERE path LIKE '%sm.jpg' ORDER BY name";
        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
            echo $e->getMessage();
        }

        $stmt->execute();

        return $stmt->fetchAll();
    }

    public function getProductsByCategory($categoryId, $path)
    {
        $conn = $this->getEntityManager()->getConnection();

        $sql = "SELECT product.id AS 'prodId', 
                product.name AS 'prodName', 
                product.price AS 'prodPrice', 
                categories.id, photo.id, path 
                FROM `product` RIGHT JOIN `categories` 
                on product.category_id = categories.id 
                INNER JOIN `photo` on product.id = photo.product_id
                WHERE categories.id = ? AND `path` LIKE ?";

        try {
            $stmt = $conn->prepare($sql);
            $stmt->bindValue(1,$categoryId);
            $stmt->bindValue(2,'%'.$path.'%');

        } catch (DBALException $e) {
            echo $e->getMessage();

        }

        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function getIndividualProducts($productName, $path)
    {
        $conn = $this->getEntityManager()->getConnection();

        $sql = "SELECT * FROM `product` LEFT JOIN  
                `photo` on product.id=photo.product_id
                WHERE product.name = ? AND
                photo.path LIKE ?";
        try {
            $stmt = $conn->prepare($sql);
            $stmt->bindValue(1, $productName);
            $stmt->bindValue(2, '%'.$path);
        } catch (DBALException $e) {
            echo $e->getMessage();
        }

        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function getNewestProducts($category)
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = "SELECT * FROM `product` LEFT JOIN `photo` on 
                product.id = photo.product_id
                WHERE date(CREATED_AT) > CURRENT_DATE - INTERVAL 2 day
                AND photo.path LIKE '%sm.jpg' AND SKU LIKE ?";
        try {
            $stmt = $conn->prepare($sql);
            $stmt->bindValue(1, $category.'%');
        } catch (DBALException $e) {
            echo $e->getMessage();
        }

        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function searchProducts($searchParam)
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = "SELECT * FROM `product` LEFT JOIN `photo`
                on product.id = photo.product_id WHERE
                photo.path LIKE '%sm.jpg' AND
                product.name LIKE ?";
        try {
            $stmt = $conn->prepare($sql);
            $stmt->bindValue(1,'%'.$searchParam.'%');
        } catch (DBALException $e) {
            echo $e->getMessage();
        }

        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function getBestSellers($id)
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql="SELECT * FROM `product` LEFT JOIN
              `photo` on product.id = photo.product_id
               WHERE product_id=? AND path LIKE '%sm.jpg'";

        try {
            $stmt = $conn->prepare($sql);
            $stmt->bindValue(1,$id);
        } catch (DBALException $e) {
            echo $e->getMessage();
        }

        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function getLastItem()
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = "SELECT `SKU`, `name`, `CREATED_AT` FROM `product` ORDER BY id DESC LIMIT 1";

        try {
            $stmt = $conn->prepare($sql);
        }catch (DBALException $e){
            echo $e->getMessage();
        }
        $stmt->execute();
        return $stmt->fetch();
    }
}
